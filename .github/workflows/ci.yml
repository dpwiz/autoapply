name: Haskell CI

on: [pull_request]

jobs:
  cabal:

    strategy:
      matrix:
        ghc: ['9.4', '9.2', '9.0', '8.10', '8.8']
        cabal: ['latest']
        os: [ubuntu-latest]
      fail-fast: false

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - uses: haskell/actions/setup@v2
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}

    - uses: actions/cache@v1
      name: Cache ~/.cabal/packages
      with:
        path: ~/.cabal/packages
        key: ${{ runner.os }}-${{ matrix.ghc }}-cabal-packages
    - uses: actions/cache@v1
      name: Cache ~/.cabal/store
      with:
        path: ~/.cabal/store
        key: ${{ runner.os }}-${{ matrix.ghc }}-cabal-store
    - uses: actions/cache@v1
      name: Cache dist-newstyle
      with:
        path: dist-newstyle
        key: ${{ runner.os }}-${{ matrix.ghc }}-dist-newstyle

    - name: Install dependencies
      run: |
        cabal update
        cabal build --only-dependencies --enable-tests --enable-benchmarks

    - name: Build
      run: cabal build --enable-tests --enable-benchmarks all

    - name: Test
      run: cabal test all

  nix:
    runs-on: ubuntu-latest
    steps:
    - uses: cachix/install-nix-action@v12
      with:
        extra_nix_config: |
          trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= orion:s0C06f1M46DCpHUUP2r8iIrhfytkCbXWltMeMMa4jbw= expipiplus1/update-nix-fetchgit:Z33K0KEImsos+kVTFvZxfLxaBi+D1jEeB6cX0uCo7B0=
          substituters = https://cache.nixos.org/ s3://nix-cache?region=ap-southeast-1&scheme=https&endpoint=binarycache.home.monoid.al
          secret-key-files = /root/nix-sign.sec
    - uses: actions/checkout@v2
    - run: |
        aws configure set aws_access_key_id nix
        aws configure set aws_secret_access_key "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
        sudo cp -r ~/.aws /root/.aws
        sudo sh -c 'printf "%s" "${{ secrets.NIX_SIGNING_KEY }}" > /root/nix-sign.sec'
    - run: |
        drvs=$(nix-instantiate | sed 's/!.*//')
        nix-build --no-out-link $drvs
        reqs=$(nix-store --query --requisites --include-outputs $drvs)
        nix --extra-experimental-features nix-command copy \
          --to 's3://nix-cache?region=ap-southeast-1&scheme=https&endpoint=binarycache.home.monoid.al' \
          $reqs
